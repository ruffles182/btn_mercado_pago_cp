<!-- SDK MercadoPago.js -->
<script src="https://sdk.mercadopago.com/js/v2"></script>

<!-- Contenedor para el botón de pago -->
<div id="wallet_container"></div>

<script>
async function getShopifyCart() {
    const response = await fetch('/cart.js');
    if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
    }
    const cart = await response.json();
    return cart;
}

async function getCurrentProduct() {
    const currentProduct = {
        title: '{{ product.title }}',
        quantity: 1,
        price: '{{ product.price }}'
    };
    console.log('prod: {{ product.title }} - {{ product.price }}');
    return currentProduct;
}

async function updateCartWithCurrentProduct() {
    const cart = await getShopifyCart();
    const currentProduct = await getCurrentProduct();

    // Verifica si el producto actual ya está en el carrito
    const existingProduct = cart.items.find(item => item.title === currentProduct.title);

    if (existingProduct) {
        // Si el producto ya está en el carrito, incrementa la cantidad
        existingProduct.quantity += 1;
    } else {
        // Si el producto no está en el carrito, agrégalo con cantidad 1
        cart.items.push(currentProduct);
    }

    // Simplifica el carrito
    const simplifiedCart = {
        items: cart.items.map(item => ({
            title: item.title,
            quantity: item.quantity,
            price: item.price
        }))
    };
    
    console.log("simplificado:", JSON.stringify(simplifiedCart, null, 2));
    return simplifiedCart;
}
  
async function sendCartToServer() {
    try {
        const simplifiedCart = await updateCartWithCurrentProduct(); // Espera a que se resuelva la promesa

        // Log del JSON antes de enviarlo
        console.log("JSON a enviar:", JSON.stringify(simplifiedCart, null, 2));

        const response = await fetch('https://sitioweb.com/pcreate.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(simplifiedCart)
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("Respuesta del servidor:", data);
        return data.preference_id;
    } catch (error) {
        console.error('Error enviando el carrito al servidor:', error);
    }
}

document.addEventListener('DOMContentLoaded', async function() {
    try {
        const preferenceId = await sendCartToServer();
        if (preferenceId) {
            const mp = new MercadoPago('public key mercado pago');
            const bricksBuilder = mp.bricks();
          
            mp.bricks().create("wallet", "wallet_container", {
               initialization: {
                   preferenceId: preferenceId,
               },
               customization: {
                   texts: {
                       valueProp: 'smart_option',
                   },
               },
            });
        }
    } catch (error) {
        console.error('Error:', error);
    }
});
</script>